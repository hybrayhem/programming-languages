Nonterminals useless in grammar

    EXPB


Terminals unused in grammar

    KW_AND
    KW_OR
    KW_NOT
    KW_EQ
    KW_GT
    KW_SET
    KW_DEFV
    KW_DEFF
    KW_WHILE
    KW_IF
    KW_EXIT
    KW_TRUE
    KW_FALSE
    OP_COMMA


Rules useless in grammar

   14 EXPB: OP_OP KW_EQ EXP EXP OP_CP
   15     | OP_OP KW_GT EXP EXP OP_CP
   16     | KW_TRUE
   17     | KW_FALSE
   18     | OP_OP KW_AND EXPB EXPB OP_CP
   19     | OP_OP KW_OR EXPB EXPB OP_CP
   20     | OP_OP KW_NOT EXPB OP_CP


Grammar

    0 $accept: START $end

    1 START: INPUT
    2      | INPUT START

    3 INPUT: EXP
    4      | EXPLIST
    5      | COMMENT

    6 EXP: OP_OP OP_PLUS EXP EXP OP_CP
    7    | OP_OP OP_MINUS EXP EXP OP_CP
    8    | OP_OP OP_MULT EXP EXP OP_CP
    9    | OP_OP OP_DIV EXP EXP OP_CP
   10    | IDENTIFIER
   11    | VALUEF

   12 EXPLIST: OP_OP EXP OP_CP
   13        | OP_OP EXPLIST EXP OP_CP


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    COMMENT (258) 5
    KW_AND (259)
    KW_OR (260)
    KW_NOT (261)
    KW_EQ (262)
    KW_GT (263)
    KW_SET (264)
    KW_DEFV (265)
    KW_DEFF (266)
    KW_WHILE (267)
    KW_IF (268)
    KW_EXIT (269)
    KW_TRUE (270)
    KW_FALSE (271)
    OP_PLUS (272) 6
    OP_MINUS (273) 7
    OP_DIV (274) 9
    OP_MULT (275) 8
    OP_OP (276) 6 7 8 9 12 13
    OP_CP (277) 6 7 8 9 12 13
    OP_COMMA (278)
    IDENTIFIER <str> (279) 10
    VALUEF <fnum> (280) 11


Nonterminals, with rules where they appear

    $accept (26)
        on left: 0
    START (27)
        on left: 1 2
        on right: 0 2
    INPUT <fnum> (28)
        on left: 3 4 5
        on right: 1 2
    EXP <fnum> (29)
        on left: 6 7 8 9 10 11
        on right: 3 6 7 8 9 12 13
    EXPLIST <fnums> (30)
        on left: 12 13
        on right: 4 13


State 0

    0 $accept: . START $end

    COMMENT     shift, and go to state 1
    OP_OP       shift, and go to state 2
    IDENTIFIER  shift, and go to state 3
    VALUEF      shift, and go to state 4

    START    go to state 5
    INPUT    go to state 6
    EXP      go to state 7
    EXPLIST  go to state 8


State 1

    5 INPUT: COMMENT .

    $default  reduce using rule 5 (INPUT)


State 2

    6 EXP: OP_OP . OP_PLUS EXP EXP OP_CP
    7    | OP_OP . OP_MINUS EXP EXP OP_CP
    8    | OP_OP . OP_MULT EXP EXP OP_CP
    9    | OP_OP . OP_DIV EXP EXP OP_CP
   12 EXPLIST: OP_OP . EXP OP_CP
   13        | OP_OP . EXPLIST EXP OP_CP

    OP_PLUS     shift, and go to state 9
    OP_MINUS    shift, and go to state 10
    OP_DIV      shift, and go to state 11
    OP_MULT     shift, and go to state 12
    OP_OP       shift, and go to state 2
    IDENTIFIER  shift, and go to state 3
    VALUEF      shift, and go to state 4

    EXP      go to state 13
    EXPLIST  go to state 14


State 3

   10 EXP: IDENTIFIER .

    $default  reduce using rule 10 (EXP)


State 4

   11 EXP: VALUEF .

    $default  reduce using rule 11 (EXP)


State 5

    0 $accept: START . $end

    $end  shift, and go to state 15


State 6

    1 START: INPUT .
    2      | INPUT . START

    COMMENT     shift, and go to state 1
    OP_OP       shift, and go to state 2
    IDENTIFIER  shift, and go to state 3
    VALUEF      shift, and go to state 4

    $default  reduce using rule 1 (START)

    START    go to state 16
    INPUT    go to state 6
    EXP      go to state 7
    EXPLIST  go to state 8


State 7

    3 INPUT: EXP .

    $default  reduce using rule 3 (INPUT)


State 8

    4 INPUT: EXPLIST .

    $default  reduce using rule 4 (INPUT)


State 9

    6 EXP: OP_OP OP_PLUS . EXP EXP OP_CP

    OP_OP       shift, and go to state 17
    IDENTIFIER  shift, and go to state 3
    VALUEF      shift, and go to state 4

    EXP  go to state 18


State 10

    7 EXP: OP_OP OP_MINUS . EXP EXP OP_CP

    OP_OP       shift, and go to state 17
    IDENTIFIER  shift, and go to state 3
    VALUEF      shift, and go to state 4

    EXP  go to state 19


State 11

    9 EXP: OP_OP OP_DIV . EXP EXP OP_CP

    OP_OP       shift, and go to state 17
    IDENTIFIER  shift, and go to state 3
    VALUEF      shift, and go to state 4

    EXP  go to state 20


State 12

    8 EXP: OP_OP OP_MULT . EXP EXP OP_CP

    OP_OP       shift, and go to state 17
    IDENTIFIER  shift, and go to state 3
    VALUEF      shift, and go to state 4

    EXP  go to state 21


State 13

   12 EXPLIST: OP_OP EXP . OP_CP

    OP_CP  shift, and go to state 22


State 14

   13 EXPLIST: OP_OP EXPLIST . EXP OP_CP

    OP_OP       shift, and go to state 17
    IDENTIFIER  shift, and go to state 3
    VALUEF      shift, and go to state 4

    EXP  go to state 23


State 15

    0 $accept: START $end .

    $default  accept


State 16

    2 START: INPUT START .

    $default  reduce using rule 2 (START)


State 17

    6 EXP: OP_OP . OP_PLUS EXP EXP OP_CP
    7    | OP_OP . OP_MINUS EXP EXP OP_CP
    8    | OP_OP . OP_MULT EXP EXP OP_CP
    9    | OP_OP . OP_DIV EXP EXP OP_CP

    OP_PLUS   shift, and go to state 9
    OP_MINUS  shift, and go to state 10
    OP_DIV    shift, and go to state 11
    OP_MULT   shift, and go to state 12


State 18

    6 EXP: OP_OP OP_PLUS EXP . EXP OP_CP

    OP_OP       shift, and go to state 17
    IDENTIFIER  shift, and go to state 3
    VALUEF      shift, and go to state 4

    EXP  go to state 24


State 19

    7 EXP: OP_OP OP_MINUS EXP . EXP OP_CP

    OP_OP       shift, and go to state 17
    IDENTIFIER  shift, and go to state 3
    VALUEF      shift, and go to state 4

    EXP  go to state 25


State 20

    9 EXP: OP_OP OP_DIV EXP . EXP OP_CP

    OP_OP       shift, and go to state 17
    IDENTIFIER  shift, and go to state 3
    VALUEF      shift, and go to state 4

    EXP  go to state 26


State 21

    8 EXP: OP_OP OP_MULT EXP . EXP OP_CP

    OP_OP       shift, and go to state 17
    IDENTIFIER  shift, and go to state 3
    VALUEF      shift, and go to state 4

    EXP  go to state 27


State 22

   12 EXPLIST: OP_OP EXP OP_CP .

    $default  reduce using rule 12 (EXPLIST)


State 23

   13 EXPLIST: OP_OP EXPLIST EXP . OP_CP

    OP_CP  shift, and go to state 28


State 24

    6 EXP: OP_OP OP_PLUS EXP EXP . OP_CP

    OP_CP  shift, and go to state 29


State 25

    7 EXP: OP_OP OP_MINUS EXP EXP . OP_CP

    OP_CP  shift, and go to state 30


State 26

    9 EXP: OP_OP OP_DIV EXP EXP . OP_CP

    OP_CP  shift, and go to state 31


State 27

    8 EXP: OP_OP OP_MULT EXP EXP . OP_CP

    OP_CP  shift, and go to state 32


State 28

   13 EXPLIST: OP_OP EXPLIST EXP OP_CP .

    $default  reduce using rule 13 (EXPLIST)


State 29

    6 EXP: OP_OP OP_PLUS EXP EXP OP_CP .

    $default  reduce using rule 6 (EXP)


State 30

    7 EXP: OP_OP OP_MINUS EXP EXP OP_CP .

    $default  reduce using rule 7 (EXP)


State 31

    9 EXP: OP_OP OP_DIV EXP EXP OP_CP .

    $default  reduce using rule 9 (EXP)


State 32

    8 EXP: OP_OP OP_MULT EXP EXP OP_CP .

    $default  reduce using rule 8 (EXP)
